@page "/recruitmentsformanagers/delete"
@using Microsoft.AspNetCore.Authorization
@using Microsoft.EntityFrameworkCore
@using HRMS.Models
@inject IDbContextFactory<HRMS.Data.ApplicationDbContext> DbFactory
@inject NavigationManager NavigationManager
@attribute [Authorize(Roles = "Admin,Manager")]

<PageTitle>删除招募</PageTitle>

<h1>删除招募</h1>

<div>
    <hr />
    @if (recruitment is null)
    {
        <p><em>加载中...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">部门</dt>
            <dd class="col-sm-10">@recruitment.Department.DepartmentName</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">职位</dt>
            <dd class="col-sm-10">@recruitment.Level.LevelName</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">描述</dt>
            <dd class="col-sm-10">@recruitment.Description</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">最低薪资</dt>
            <dd class="col-sm-10">@recruitment.BottomSalary</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">最高薪资</dt>
            <dd class="col-sm-10">@recruitment.TopSalary</dd>
        </dl>
        <EditForm method="post" Model="recruitment" OnValidSubmit="DeleteRecruitment" FormName="delete" Enhance>
            <button type="submit" class="btn btn-danger" disabled="@(recruitment is null)">删除</button>
            <a href="/recruitmentsformanagers"><button class="btn btn-primary">返回</button></a>
        </EditForm>
    }
</div>

@code {
    private Recruitment? recruitment;

    [SupplyParameterFromQuery]
    private int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        recruitment = await context.Recruitment
            .Include(m => m.Department)
            .Include(m => m.Level)
            .FirstOrDefaultAsync(m => m.Id == Id);

        if (recruitment is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    private async Task DeleteRecruitment()
    {
        using var context = DbFactory.CreateDbContext();
        context.Recruitment.Remove(recruitment!);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/recruitmentsformanagers");
    }
}
