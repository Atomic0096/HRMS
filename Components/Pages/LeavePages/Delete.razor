@page "/leaves/delete"
@using Microsoft.EntityFrameworkCore
@using HRMS.Models
@inject IDbContextFactory<HRMS.Data.ApplicationDbContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>删除请假</PageTitle>

<h1>删除请假</h1>

<div>
    <hr />
    @if (leave is null)
    {
        <p><em>加载中...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">姓名</dt>
            <dd class="col-sm-10">@leave.ApplicationUser.Name</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">开始日期</dt>
            <dd class="col-sm-10">@leave.StartDate</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">结束日期</dt>
            <dd class="col-sm-10">@leave.EndDate</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">是否批准</dt>
            <dd class="col-sm-10">@leave.IsApproved</dd>
        </dl>
        <EditForm method="post" Model="leave" OnValidSubmit="DeleteLeave" FormName="delete" Enhance>
            <button type="submit" class="btn btn-danger" disabled="@(leave is null)">删除</button>
            <a href="/leaves"><button class="btn btn-primary">返回</button></a>
        </EditForm>
    }
</div>

@code {
    private Leave? leave;

    [SupplyParameterFromQuery]
    private int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        leave = await context.Leave.Include(m => m.ApplicationUser).FirstOrDefaultAsync(m => m.Id == Id);

        if (leave is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    private async Task DeleteLeave()
    {
        using var context = DbFactory.CreateDbContext();
        context.Leave.Remove(leave!);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/leaves");
    }
}
