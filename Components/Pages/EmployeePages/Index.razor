@page "/employees"
@using Microsoft.EntityFrameworkCore
@using Microsoft.AspNetCore.Components.QuickGrid
@using HRMS.Models
@using HRMS.Data
@implements IAsyncDisposable
@inject IDbContextFactory<HRMS.Data.ApplicationDbContext> DbFactory

<PageTitle>员工管理</PageTitle>

<h1>员工管理</h1>
<div>
    <form action="/employees" date-enhance>
        <input type="search" name="nameFilter" />
        <input type="submit" value="搜索" />
    </form>
</div>

<QuickGrid Class="table" Items="FilteredEmployees" Pagination="pagination">
    <PropertyColumn Property="user => user.Name" Title="姓名" />
    <PropertyColumn Property="user => user.Gender" Title="性别" />
    <PropertyColumn Property="user => user.DateOfBirth" Title="出生日期" />
    <PropertyColumn Property="user => user.Department.DepartmentName" Title="部门" />
    <PropertyColumn Property="user => user.Level.LevelName" Title="职位" />
    <PropertyColumn Property="user => user.DateOfEntry" Title="入职日期" />
    <PropertyColumn Property="user => user.Salary" Title="薪资" />

    <TemplateColumn Context="employee">
        <a href="@($"employees/edit?id={employee.Id}")">编辑</a> |
        <a href="@($"employees/details?id={employee.Id}")">详情</a> |
        <a href="@($"employees/delete?id={employee.Id}")">删除</a>
    </TemplateColumn>
</QuickGrid>
<Paginator State="pagination" />

@code{
    private PaginationState pagination = new PaginationState { ItemsPerPage = 10 };
    private ApplicationDbContext context = default!;
    [SupplyParameterFromQuery]
    private string? NameFilter { get; set; }
    private IQueryable<ApplicationUser> FilteredEmployees =>
        context.Users
            .Include(u => u.Department)
            .Include(u => u.Level)
            .Where(m => m.Name!.Contains(NameFilter ?? string.Empty));
    protected override void OnInitialized()
    {
        context = DbFactory.CreateDbContext();
    }

    public async ValueTask DisposeAsync() => await context.DisposeAsync();
}