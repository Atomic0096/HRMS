@page "/employees/details"
@using Microsoft.EntityFrameworkCore
@using HRMS.Models
@inject IDbContextFactory<HRMS.Data.ApplicationDbContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>员工详情</PageTitle>

<h1>员工详情</h1>

<div>
    <hr />
    @if (employee is null)
    {
        <p><em>加载中...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">姓名</dt>
            <dd class="col-sm-10">@employee.Name</dd>
            <dt class="col-sm-2">性别</dt>
            <dd class="col-sm-10">@employee.Gender</dd>
            <dt class="col-sm-2">出生日期</dt>
            <dd class="col-sm-10">@employee.DateOfBirth</dd>
            <dt class="col-sm-2">薪资</dt>
            <dd class="col-sm-10">@employee.Salary</dd>
            <dt class="col-sm-2">入职日期</dt>
            <dd class="col-sm-10">@employee.DateOfEntry</dd>
            <dt class="col-sm-2">部门</dt>
            <dd class="col-sm-10">@employee.Department?.DepartmentName</dd>
            <dt class="col-sm-2">职位</dt>
            <dd class="col-sm-10">@employee.Level?.LevelName</dd>
        </dl>
        <div>
            <a href="@($"/employees/edit?id={employee.Id}")"><button class="btn btn-primary">编辑</button></a>
            <a href="@($"/employees")"><button class="btn btn-primary">返回</button></a>
        </div>
    }
</div>

@code {
    private Employee? employee;

    [SupplyParameterFromQuery]
    private int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        employee = await context.Employee
            .Include(e => e.Department)
            .Include(e => e.Level)
            .FirstOrDefaultAsync(m => m.Id == Id);

        if (employee is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }
}
